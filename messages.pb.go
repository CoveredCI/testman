// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Method int32

const (
	Method_UNKNOWN Method = 0
	Method_GET     Method = 1
	Method_HEAD    Method = 2
	Method_POST    Method = 3
	Method_PUT     Method = 4
	Method_PATCH   Method = 5
	Method_DELETE  Method = 6
	Method_CONNECT Method = 7
	Method_OPTIONS Method = 8
	Method_TRACE   Method = 9
)

var Method_name = map[int32]string{
	0: "UNKNOWN",
	1: "GET",
	2: "HEAD",
	3: "POST",
	4: "PUT",
	5: "PATCH",
	6: "DELETE",
	7: "CONNECT",
	8: "OPTIONS",
	9: "TRACE",
}
var Method_value = map[string]int32{
	"UNKNOWN": 0,
	"GET":     1,
	"HEAD":    2,
	"POST":    3,
	"PUT":     4,
	"PATCH":   5,
	"DELETE":  6,
	"CONNECT": 7,
	"OPTIONS": 8,
	"TRACE":   9,
}

func (x Method) String() string {
	return proto.EnumName(Method_name, int32(x))
}
func (Method) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{0}
}

type UserCfg_Kind int32

const (
	UserCfg_UNKNOWN   UserCfg_Kind = 0
	UserCfg_OpenAPIv3 UserCfg_Kind = 1
)

var UserCfg_Kind_name = map[int32]string{
	0: "UNKNOWN",
	1: "OpenAPIv3",
}
var UserCfg_Kind_value = map[string]int32{
	"UNKNOWN":   0,
	"OpenAPIv3": 1,
}

func (x UserCfg_Kind) String() string {
	return proto.EnumName(UserCfg_Kind_name, int32(x))
}
func (UserCfg_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{0, 0}
}

type Schema_JSON_Type int32

const (
	Schema_JSON_UNKNOWN Schema_JSON_Type = 0
	Schema_JSON_any     Schema_JSON_Type = 1
	Schema_JSON_null    Schema_JSON_Type = 2
	Schema_JSON_boolean Schema_JSON_Type = 3
	Schema_JSON_integer Schema_JSON_Type = 4
	Schema_JSON_number  Schema_JSON_Type = 5
	Schema_JSON_array   Schema_JSON_Type = 6
	Schema_JSON_string  Schema_JSON_Type = 7
	Schema_JSON_object  Schema_JSON_Type = 8
)

var Schema_JSON_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "any",
	2: "null",
	3: "boolean",
	4: "integer",
	5: "number",
	6: "array",
	7: "string",
	8: "object",
}
var Schema_JSON_Type_value = map[string]int32{
	"UNKNOWN": 0,
	"any":     1,
	"null":    2,
	"boolean": 3,
	"integer": 4,
	"number":  5,
	"array":   6,
	"string":  7,
	"object":  8,
}

func (x Schema_JSON_Type) String() string {
	return proto.EnumName(Schema_JSON_Type_name, int32(x))
}
func (Schema_JSON_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{11, 0, 0}
}

type UserCfg struct {
	Version              uint32          `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	AuthToken            string          `protobuf:"bytes,2,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	Kind                 UserCfg_Kind     `protobuf:"varint,3,opt,name=kind,proto3,enum=main.UserCfg_Kind" json:"kind,omitempty"`
	File                 string          `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
	Runtime              *UserCfg_Runtime `protobuf:"bytes,5,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Exec                 *UserCfg_Exec    `protobuf:"bytes,6,opt,name=exec,proto3" json:"exec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UserCfg) Reset()         { *m = UserCfg{} }
func (m *UserCfg) String() string { return proto.CompactTextString(m) }
func (*UserCfg) ProtoMessage()    {}
func (*UserCfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{0}
}
func (m *UserCfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCfg.Unmarshal(m, b)
}
func (m *UserCfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCfg.Marshal(b, m, deterministic)
}
func (dst *UserCfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCfg.Merge(dst, src)
}
func (m *UserCfg) XXX_Size() int {
	return xxx_messageInfo_UserCfg.Size(m)
}
func (m *UserCfg) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCfg.DiscardUnknown(m)
}

var xxx_messageInfo_UserCfg proto.InternalMessageInfo

func (m *UserCfg) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *UserCfg) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *UserCfg) GetKind() UserCfg_Kind {
	if m != nil {
		return m.Kind
	}
	return UserCfg_UNKNOWN
}

func (m *UserCfg) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *UserCfg) GetRuntime() *UserCfg_Runtime {
	if m != nil {
		return m.Runtime
	}
	return nil
}

func (m *UserCfg) GetExec() *UserCfg_Exec {
	if m != nil {
		return m.Exec
	}
	return nil
}

type UserCfg_Runtime struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	FinalHost            string   `protobuf:"bytes,3,opt,name=final_host,json=finalHost,proto3" json:"final_host,omitempty"`
	FinalPort            string   `protobuf:"bytes,4,opt,name=final_port,json=finalPort,proto3" json:"final_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserCfg_Runtime) Reset()         { *m = UserCfg_Runtime{} }
func (m *UserCfg_Runtime) String() string { return proto.CompactTextString(m) }
func (*UserCfg_Runtime) ProtoMessage()    {}
func (*UserCfg_Runtime) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{0, 0}
}
func (m *UserCfg_Runtime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCfg_Runtime.Unmarshal(m, b)
}
func (m *UserCfg_Runtime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCfg_Runtime.Marshal(b, m, deterministic)
}
func (dst *UserCfg_Runtime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCfg_Runtime.Merge(dst, src)
}
func (m *UserCfg_Runtime) XXX_Size() int {
	return xxx_messageInfo_UserCfg_Runtime.Size(m)
}
func (m *UserCfg_Runtime) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCfg_Runtime.DiscardUnknown(m)
}

var xxx_messageInfo_UserCfg_Runtime proto.InternalMessageInfo

func (m *UserCfg_Runtime) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *UserCfg_Runtime) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *UserCfg_Runtime) GetFinalHost() string {
	if m != nil {
		return m.FinalHost
	}
	return ""
}

func (m *UserCfg_Runtime) GetFinalPort() string {
	if m != nil {
		return m.FinalPort
	}
	return ""
}

type UserCfg_Exec struct {
	Start                []string `protobuf:"bytes,1,rep,name=start,proto3" json:"start,omitempty"`
	Reset_               []string `protobuf:"bytes,2,rep,name=reset,proto3" json:"reset,omitempty"`
	Stop                 []string `protobuf:"bytes,3,rep,name=stop,proto3" json:"stop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserCfg_Exec) Reset()         { *m = UserCfg_Exec{} }
func (m *UserCfg_Exec) String() string { return proto.CompactTextString(m) }
func (*UserCfg_Exec) ProtoMessage()    {}
func (*UserCfg_Exec) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{0, 1}
}
func (m *UserCfg_Exec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCfg_Exec.Unmarshal(m, b)
}
func (m *UserCfg_Exec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCfg_Exec.Marshal(b, m, deterministic)
}
func (dst *UserCfg_Exec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCfg_Exec.Merge(dst, src)
}
func (m *UserCfg_Exec) XXX_Size() int {
	return xxx_messageInfo_UserCfg_Exec.Size(m)
}
func (m *UserCfg_Exec) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCfg_Exec.DiscardUnknown(m)
}

var xxx_messageInfo_UserCfg_Exec proto.InternalMessageInfo

func (m *UserCfg_Exec) GetStart() []string {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *UserCfg_Exec) GetReset_() []string {
	if m != nil {
		return m.Reset_
	}
	return nil
}

func (m *UserCfg_Exec) GetStop() []string {
	if m != nil {
		return m.Stop
	}
	return nil
}

type FuzzCfg struct {
	Config               *UserCfg  `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Spec                 *SpecIR  `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FuzzCfg) Reset()         { *m = FuzzCfg{} }
func (m *FuzzCfg) String() string { return proto.CompactTextString(m) }
func (*FuzzCfg) ProtoMessage()    {}
func (*FuzzCfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{1}
}
func (m *FuzzCfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FuzzCfg.Unmarshal(m, b)
}
func (m *FuzzCfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FuzzCfg.Marshal(b, m, deterministic)
}
func (dst *FuzzCfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FuzzCfg.Merge(dst, src)
}
func (m *FuzzCfg) XXX_Size() int {
	return xxx_messageInfo_FuzzCfg.Size(m)
}
func (m *FuzzCfg) XXX_DiscardUnknown() {
	xxx_messageInfo_FuzzCfg.DiscardUnknown(m)
}

var xxx_messageInfo_FuzzCfg proto.InternalMessageInfo

func (m *FuzzCfg) GetConfig() *UserCfg {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *FuzzCfg) GetSpec() *SpecIR {
	if m != nil {
		return m.Spec
	}
	return nil
}

type SpecIR struct {
	Schemas              *Schemas    `protobuf:"bytes,1,opt,name=schemas,proto3" json:"schemas,omitempty"`
	Endpoints            []*Endpoint `protobuf:"bytes,2,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SpecIR) Reset()         { *m = SpecIR{} }
func (m *SpecIR) String() string { return proto.CompactTextString(m) }
func (*SpecIR) ProtoMessage()    {}
func (*SpecIR) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{2}
}
func (m *SpecIR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpecIR.Unmarshal(m, b)
}
func (m *SpecIR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpecIR.Marshal(b, m, deterministic)
}
func (dst *SpecIR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpecIR.Merge(dst, src)
}
func (m *SpecIR) XXX_Size() int {
	return xxx_messageInfo_SpecIR.Size(m)
}
func (m *SpecIR) XXX_DiscardUnknown() {
	xxx_messageInfo_SpecIR.DiscardUnknown(m)
}

var xxx_messageInfo_SpecIR proto.InternalMessageInfo

func (m *SpecIR) GetSchemas() *Schemas {
	if m != nil {
		return m.Schemas
	}
	return nil
}

func (m *SpecIR) GetEndpoints() []*Endpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

type Schemas struct {
	// All schemas are here. Only mention SchemaPtr everywhere else.
	// Start at 1. 0 (zero) is reserved for bug finding.
	Json                 map[uint32]*RefOrSchemaJSON `protobuf:"bytes,1,rep,name=json,proto3" json:"json,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Schemas) Reset()         { *m = Schemas{} }
func (m *Schemas) String() string { return proto.CompactTextString(m) }
func (*Schemas) ProtoMessage()    {}
func (*Schemas) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{3}
}
func (m *Schemas) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schemas.Unmarshal(m, b)
}
func (m *Schemas) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schemas.Marshal(b, m, deterministic)
}
func (dst *Schemas) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schemas.Merge(dst, src)
}
func (m *Schemas) XXX_Size() int {
	return xxx_messageInfo_Schemas.Size(m)
}
func (m *Schemas) XXX_DiscardUnknown() {
	xxx_messageInfo_Schemas.DiscardUnknown(m)
}

var xxx_messageInfo_Schemas proto.InternalMessageInfo

func (m *Schemas) GetJson() map[uint32]*RefOrSchemaJSON {
	if m != nil {
		return m.Json
	}
	return nil
}

type RefOrSchemaJSON struct {
	// Types that are valid to be assigned to PtrOrSchema:
	//	*RefOrSchemaJSON_Ptr
	//	*RefOrSchemaJSON_Schema
	PtrOrSchema          isRefOrSchemaJSON_PtrOrSchema `protobuf_oneof:"ptr_or_schema"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *RefOrSchemaJSON) Reset()         { *m = RefOrSchemaJSON{} }
func (m *RefOrSchemaJSON) String() string { return proto.CompactTextString(m) }
func (*RefOrSchemaJSON) ProtoMessage()    {}
func (*RefOrSchemaJSON) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{4}
}
func (m *RefOrSchemaJSON) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefOrSchemaJSON.Unmarshal(m, b)
}
func (m *RefOrSchemaJSON) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefOrSchemaJSON.Marshal(b, m, deterministic)
}
func (dst *RefOrSchemaJSON) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefOrSchemaJSON.Merge(dst, src)
}
func (m *RefOrSchemaJSON) XXX_Size() int {
	return xxx_messageInfo_RefOrSchemaJSON.Size(m)
}
func (m *RefOrSchemaJSON) XXX_DiscardUnknown() {
	xxx_messageInfo_RefOrSchemaJSON.DiscardUnknown(m)
}

var xxx_messageInfo_RefOrSchemaJSON proto.InternalMessageInfo

type isRefOrSchemaJSON_PtrOrSchema interface {
	isRefOrSchemaJSON_PtrOrSchema()
}

type RefOrSchemaJSON_Ptr struct {
	Ptr *SchemaPtr `protobuf:"bytes,1,opt,name=ptr,proto3,oneof"`
}
type RefOrSchemaJSON_Schema struct {
	Schema *Schema_JSON `protobuf:"bytes,2,opt,name=schema,proto3,oneof"`
}

func (*RefOrSchemaJSON_Ptr) isRefOrSchemaJSON_PtrOrSchema()    {}
func (*RefOrSchemaJSON_Schema) isRefOrSchemaJSON_PtrOrSchema() {}

func (m *RefOrSchemaJSON) GetPtrOrSchema() isRefOrSchemaJSON_PtrOrSchema {
	if m != nil {
		return m.PtrOrSchema
	}
	return nil
}

func (m *RefOrSchemaJSON) GetPtr() *SchemaPtr {
	if x, ok := m.GetPtrOrSchema().(*RefOrSchemaJSON_Ptr); ok {
		return x.Ptr
	}
	return nil
}

func (m *RefOrSchemaJSON) GetSchema() *Schema_JSON {
	if x, ok := m.GetPtrOrSchema().(*RefOrSchemaJSON_Schema); ok {
		return x.Schema
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RefOrSchemaJSON) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RefOrSchemaJSON_OneofMarshaler, _RefOrSchemaJSON_OneofUnmarshaler, _RefOrSchemaJSON_OneofSizer, []interface{}{
		(*RefOrSchemaJSON_Ptr)(nil),
		(*RefOrSchemaJSON_Schema)(nil),
	}
}

func _RefOrSchemaJSON_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RefOrSchemaJSON)
	// ptr_or_schema
	switch x := m.PtrOrSchema.(type) {
	case *RefOrSchemaJSON_Ptr:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ptr); err != nil {
			return err
		}
	case *RefOrSchemaJSON_Schema:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Schema); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RefOrSchemaJSON.PtrOrSchema has unexpected type %T", x)
	}
	return nil
}

func _RefOrSchemaJSON_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RefOrSchemaJSON)
	switch tag {
	case 1: // ptr_or_schema.ptr
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SchemaPtr)
		err := b.DecodeMessage(msg)
		m.PtrOrSchema = &RefOrSchemaJSON_Ptr{msg}
		return true, err
	case 2: // ptr_or_schema.schema
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Schema_JSON)
		err := b.DecodeMessage(msg)
		m.PtrOrSchema = &RefOrSchemaJSON_Schema{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RefOrSchemaJSON_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RefOrSchemaJSON)
	// ptr_or_schema
	switch x := m.PtrOrSchema.(type) {
	case *RefOrSchemaJSON_Ptr:
		s := proto.Size(x.Ptr)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RefOrSchemaJSON_Schema:
		s := proto.Size(x.Schema)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SchemaPtr struct {
	// Pointer to actual schema. i.e. key in Schemas message.
	UID uint32 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	// $ref if was ref'd, in canonical/absolute (#/...-like) format.
	Ref                  string   `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SchemaPtr) Reset()         { *m = SchemaPtr{} }
func (m *SchemaPtr) String() string { return proto.CompactTextString(m) }
func (*SchemaPtr) ProtoMessage()    {}
func (*SchemaPtr) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{5}
}
func (m *SchemaPtr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchemaPtr.Unmarshal(m, b)
}
func (m *SchemaPtr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchemaPtr.Marshal(b, m, deterministic)
}
func (dst *SchemaPtr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchemaPtr.Merge(dst, src)
}
func (m *SchemaPtr) XXX_Size() int {
	return xxx_messageInfo_SchemaPtr.Size(m)
}
func (m *SchemaPtr) XXX_DiscardUnknown() {
	xxx_messageInfo_SchemaPtr.DiscardUnknown(m)
}

var xxx_messageInfo_SchemaPtr proto.InternalMessageInfo

func (m *SchemaPtr) GetUID() uint32 {
	if m != nil {
		return m.UID
	}
	return 0
}

func (m *SchemaPtr) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

type Endpoint struct {
	// Types that are valid to be assigned to Endpoint:
	//	*Endpoint_Json
	Endpoint             isEndpoint_Endpoint `protobuf_oneof:"endpoint"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Endpoint) Reset()         { *m = Endpoint{} }
func (m *Endpoint) String() string { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()    {}
func (*Endpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{6}
}
func (m *Endpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Endpoint.Unmarshal(m, b)
}
func (m *Endpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Endpoint.Marshal(b, m, deterministic)
}
func (dst *Endpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Endpoint.Merge(dst, src)
}
func (m *Endpoint) XXX_Size() int {
	return xxx_messageInfo_Endpoint.Size(m)
}
func (m *Endpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Endpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Endpoint proto.InternalMessageInfo

type isEndpoint_Endpoint interface {
	isEndpoint_Endpoint()
}

type Endpoint_Json struct {
	Json *EndpointJSON `protobuf:"bytes,1,opt,name=json,proto3,oneof"`
}

func (*Endpoint_Json) isEndpoint_Endpoint() {}

func (m *Endpoint) GetEndpoint() isEndpoint_Endpoint {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *Endpoint) GetJson() *EndpointJSON {
	if x, ok := m.GetEndpoint().(*Endpoint_Json); ok {
		return x.Json
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Endpoint) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Endpoint_OneofMarshaler, _Endpoint_OneofUnmarshaler, _Endpoint_OneofSizer, []interface{}{
		(*Endpoint_Json)(nil),
	}
}

func _Endpoint_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Endpoint)
	// endpoint
	switch x := m.Endpoint.(type) {
	case *Endpoint_Json:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Json); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Endpoint.Endpoint has unexpected type %T", x)
	}
	return nil
}

func _Endpoint_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Endpoint)
	switch tag {
	case 1: // endpoint.json
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EndpointJSON)
		err := b.DecodeMessage(msg)
		m.Endpoint = &Endpoint_Json{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Endpoint_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Endpoint)
	// endpoint
	switch x := m.Endpoint.(type) {
	case *Endpoint_Json:
		s := proto.Size(x.Json)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type EndpointJSON struct {
	Method       Method         `protobuf:"varint,1,opt,name=method,proto3,enum=main.Method" json:"method,omitempty"`
	PathPartials []*PathPartial `protobuf:"bytes,2,rep,name=path_partials,json=pathPartials,proto3" json:"path_partials,omitempty"`
	Inputs       *ParamsJSON    `protobuf:"bytes,3,opt,name=inputs,proto3" json:"inputs,omitempty"`
	// The uint32 key replaces an enum of 1XX,...,201,204,...,5XX,XXX.
	Outputs              map[uint32]*SchemaPtr `protobuf:"bytes,4,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EndpointJSON) Reset()         { *m = EndpointJSON{} }
func (m *EndpointJSON) String() string { return proto.CompactTextString(m) }
func (*EndpointJSON) ProtoMessage()    {}
func (*EndpointJSON) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{7}
}
func (m *EndpointJSON) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndpointJSON.Unmarshal(m, b)
}
func (m *EndpointJSON) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndpointJSON.Marshal(b, m, deterministic)
}
func (dst *EndpointJSON) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndpointJSON.Merge(dst, src)
}
func (m *EndpointJSON) XXX_Size() int {
	return xxx_messageInfo_EndpointJSON.Size(m)
}
func (m *EndpointJSON) XXX_DiscardUnknown() {
	xxx_messageInfo_EndpointJSON.DiscardUnknown(m)
}

var xxx_messageInfo_EndpointJSON proto.InternalMessageInfo

func (m *EndpointJSON) GetMethod() Method {
	if m != nil {
		return m.Method
	}
	return Method_UNKNOWN
}

func (m *EndpointJSON) GetPathPartials() []*PathPartial {
	if m != nil {
		return m.PathPartials
	}
	return nil
}

func (m *EndpointJSON) GetInputs() *ParamsJSON {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *EndpointJSON) GetOutputs() map[uint32]*SchemaPtr {
	if m != nil {
		return m.Outputs
	}
	return nil
}

type ParamsJSON struct {
	Body                 *ParamJSON            `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Header               map[string]*ParamJSON `protobuf:"bytes,2,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Path                 map[string]*ParamJSON `protobuf:"bytes,3,rep,name=path,proto3" json:"path,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Query                map[string]*ParamJSON `protobuf:"bytes,4,rep,name=query,proto3" json:"query,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ParamsJSON) Reset()         { *m = ParamsJSON{} }
func (m *ParamsJSON) String() string { return proto.CompactTextString(m) }
func (*ParamsJSON) ProtoMessage()    {}
func (*ParamsJSON) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{8}
}
func (m *ParamsJSON) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParamsJSON.Unmarshal(m, b)
}
func (m *ParamsJSON) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParamsJSON.Marshal(b, m, deterministic)
}
func (dst *ParamsJSON) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParamsJSON.Merge(dst, src)
}
func (m *ParamsJSON) XXX_Size() int {
	return xxx_messageInfo_ParamsJSON.Size(m)
}
func (m *ParamsJSON) XXX_DiscardUnknown() {
	xxx_messageInfo_ParamsJSON.DiscardUnknown(m)
}

var xxx_messageInfo_ParamsJSON proto.InternalMessageInfo

func (m *ParamsJSON) GetBody() *ParamJSON {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *ParamsJSON) GetHeader() map[string]*ParamJSON {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ParamsJSON) GetPath() map[string]*ParamJSON {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *ParamsJSON) GetQuery() map[string]*ParamJSON {
	if m != nil {
		return m.Query
	}
	return nil
}

type ParamJSON struct {
	// Whether this param has to be present
	Required bool `protobuf:"varint,1,opt,name=required,proto3" json:"required,omitempty"`
	// Pointer to Schemas message
	Ptr                  *SchemaPtr `protobuf:"bytes,2,opt,name=ptr,proto3" json:"ptr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ParamJSON) Reset()         { *m = ParamJSON{} }
func (m *ParamJSON) String() string { return proto.CompactTextString(m) }
func (*ParamJSON) ProtoMessage()    {}
func (*ParamJSON) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{9}
}
func (m *ParamJSON) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParamJSON.Unmarshal(m, b)
}
func (m *ParamJSON) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParamJSON.Marshal(b, m, deterministic)
}
func (dst *ParamJSON) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParamJSON.Merge(dst, src)
}
func (m *ParamJSON) XXX_Size() int {
	return xxx_messageInfo_ParamJSON.Size(m)
}
func (m *ParamJSON) XXX_DiscardUnknown() {
	xxx_messageInfo_ParamJSON.DiscardUnknown(m)
}

var xxx_messageInfo_ParamJSON proto.InternalMessageInfo

func (m *ParamJSON) GetRequired() bool {
	if m != nil {
		return m.Required
	}
	return false
}

func (m *ParamJSON) GetPtr() *SchemaPtr {
	if m != nil {
		return m.Ptr
	}
	return nil
}

type PathPartial struct {
	// Types that are valid to be assigned to Pp:
	//	*PathPartial_Part
	//	*PathPartial_Ptr
	Pp                   isPathPartial_Pp `protobuf_oneof:"pp"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PathPartial) Reset()         { *m = PathPartial{} }
func (m *PathPartial) String() string { return proto.CompactTextString(m) }
func (*PathPartial) ProtoMessage()    {}
func (*PathPartial) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{10}
}
func (m *PathPartial) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PathPartial.Unmarshal(m, b)
}
func (m *PathPartial) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PathPartial.Marshal(b, m, deterministic)
}
func (dst *PathPartial) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PathPartial.Merge(dst, src)
}
func (m *PathPartial) XXX_Size() int {
	return xxx_messageInfo_PathPartial.Size(m)
}
func (m *PathPartial) XXX_DiscardUnknown() {
	xxx_messageInfo_PathPartial.DiscardUnknown(m)
}

var xxx_messageInfo_PathPartial proto.InternalMessageInfo

type isPathPartial_Pp interface {
	isPathPartial_Pp()
}

type PathPartial_Part struct {
	Part string `protobuf:"bytes,1,opt,name=part,proto3,oneof"`
}
type PathPartial_Ptr struct {
	Ptr string `protobuf:"bytes,2,opt,name=ptr,proto3,oneof"`
}

func (*PathPartial_Part) isPathPartial_Pp() {}
func (*PathPartial_Ptr) isPathPartial_Pp()  {}

func (m *PathPartial) GetPp() isPathPartial_Pp {
	if m != nil {
		return m.Pp
	}
	return nil
}

func (m *PathPartial) GetPart() string {
	if x, ok := m.GetPp().(*PathPartial_Part); ok {
		return x.Part
	}
	return ""
}

func (m *PathPartial) GetPtr() string {
	if x, ok := m.GetPp().(*PathPartial_Ptr); ok {
		return x.Ptr
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PathPartial) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PathPartial_OneofMarshaler, _PathPartial_OneofUnmarshaler, _PathPartial_OneofSizer, []interface{}{
		(*PathPartial_Part)(nil),
		(*PathPartial_Ptr)(nil),
	}
}

func _PathPartial_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PathPartial)
	// pp
	switch x := m.Pp.(type) {
	case *PathPartial_Part:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Part)
	case *PathPartial_Ptr:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Ptr)
	case nil:
	default:
		return fmt.Errorf("PathPartial.Pp has unexpected type %T", x)
	}
	return nil
}

func _PathPartial_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PathPartial)
	switch tag {
	case 1: // pp.part
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Pp = &PathPartial_Part{x}
		return true, err
	case 2: // pp.ptr
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Pp = &PathPartial_Ptr{x}
		return true, err
	default:
		return false, nil
	}
}

func _PathPartial_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PathPartial)
	// pp
	switch x := m.Pp.(type) {
	case *PathPartial_Part:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Part)))
		n += len(x.Part)
	case *PathPartial_Ptr:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Ptr)))
		n += len(x.Ptr)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Schema struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Schema) Reset()         { *m = Schema{} }
func (m *Schema) String() string { return proto.CompactTextString(m) }
func (*Schema) ProtoMessage()    {}
func (*Schema) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{11}
}
func (m *Schema) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schema.Unmarshal(m, b)
}
func (m *Schema) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schema.Marshal(b, m, deterministic)
}
func (dst *Schema) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schema.Merge(dst, src)
}
func (m *Schema) XXX_Size() int {
	return xxx_messageInfo_Schema.Size(m)
}
func (m *Schema) XXX_DiscardUnknown() {
	xxx_messageInfo_Schema.DiscardUnknown(m)
}

var xxx_messageInfo_Schema proto.InternalMessageInfo

type Schema_JSON struct {
	Type []Schema_JSON_Type `protobuf:"varint,1,rep,packed,name=type,proto3,enum=main.Schema_JSON_Type" json:"type,omitempty"`
	Enum *JSON_Array        `protobuf:"bytes,2,opt,name=enum,proto3" json:"enum,omitempty"`
	// type: string
	Format       string `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	MinLength    uint64 `protobuf:"varint,4,opt,name=min_length,json=minLength,proto3" json:"min_length,omitempty"`
	MaxLength    uint64 `protobuf:"varint,5,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	HasMaxLength bool   `protobuf:"varint,6,opt,name=has_max_length,json=hasMaxLength,proto3" json:"has_max_length,omitempty"`
	Pattern      string `protobuf:"bytes,7,opt,name=pattern,proto3" json:"pattern,omitempty"`
	// type: number | integer
	Minimum              float64 `protobuf:"fixed64,8,opt,name=minimum,proto3" json:"minimum,omitempty"`
	Maximum              float64 `protobuf:"fixed64,9,opt,name=maximum,proto3" json:"maximum,omitempty"`
	HasMinimum           bool    `protobuf:"varint,10,opt,name=has_minimum,json=hasMinimum,proto3" json:"has_minimum,omitempty"`
	HasMaximum           bool    `protobuf:"varint,11,opt,name=has_maximum,json=hasMaximum,proto3" json:"has_maximum,omitempty"`
	TranslatedMultipleOf float64 `protobuf:"fixed64,12,opt,name=translated_multiple_of,json=translatedMultipleOf,proto3" json:"translated_multiple_of,omitempty"`
	ExclusiveMinimum     bool    `protobuf:"varint,13,opt,name=exclusive_minimum,json=exclusiveMinimum,proto3" json:"exclusive_minimum,omitempty"`
	ExclusiveMaximum     bool    `protobuf:"varint,14,opt,name=exclusive_maximum,json=exclusiveMaximum,proto3" json:"exclusive_maximum,omitempty"`
	// type: array
	Items       []*SchemaPtr `protobuf:"bytes,15,rep,name=items,proto3" json:"items,omitempty"`
	UniqueItems bool         `protobuf:"varint,16,opt,name=unique_items,json=uniqueItems,proto3" json:"unique_items,omitempty"`
	MinItems    uint64       `protobuf:"varint,17,opt,name=min_items,json=minItems,proto3" json:"min_items,omitempty"`
	MaxItems    uint64       `protobuf:"varint,18,opt,name=max_items,json=maxItems,proto3" json:"max_items,omitempty"`
	HasMaxItems bool         `protobuf:"varint,19,opt,name=has_max_items,json=hasMaxItems,proto3" json:"has_max_items,omitempty"`
	// type: object
	Properties              map[string]*SchemaPtr             `protobuf:"bytes,20,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Required                []string                          `protobuf:"bytes,21,rep,name=required,proto3" json:"required,omitempty"`
	MinProperties           uint64                            `protobuf:"varint,22,opt,name=min_properties,json=minProperties,proto3" json:"min_properties,omitempty"`
	MaxProperties           uint64                            `protobuf:"varint,23,opt,name=max_properties,json=maxProperties,proto3" json:"max_properties,omitempty"`
	HasMaxProperties        bool                              `protobuf:"varint,24,opt,name=has_max_properties,json=hasMaxProperties,proto3" json:"has_max_properties,omitempty"`
	AdditionalProperties    *Schema_JSON_AdditionalProperties `protobuf:"bytes,25,opt,name=additional_properties,json=additionalProperties,proto3" json:"additional_properties,omitempty"`
	HasAdditionalProperties bool                              `protobuf:"varint,26,opt,name=has_additional_properties,json=hasAdditionalProperties,proto3" json:"has_additional_properties,omitempty"`
	AllOf                   []*SchemaPtr                      `protobuf:"bytes,27,rep,name=all_of,json=allOf,proto3" json:"all_of,omitempty"`
	AnyOf                   []*SchemaPtr                      `protobuf:"bytes,28,rep,name=any_of,json=anyOf,proto3" json:"any_of,omitempty"`
	OneOf                   []*SchemaPtr                      `protobuf:"bytes,29,rep,name=one_of,json=oneOf,proto3" json:"one_of,omitempty"`
	Not                     *SchemaPtr                        `protobuf:"bytes,30,opt,name=not,proto3" json:"not,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                          `json:"-"`
	XXX_unrecognized        []byte                            `json:"-"`
	XXX_sizecache           int32                             `json:"-"`
}

func (m *Schema_JSON) Reset()         { *m = Schema_JSON{} }
func (m *Schema_JSON) String() string { return proto.CompactTextString(m) }
func (*Schema_JSON) ProtoMessage()    {}
func (*Schema_JSON) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{11, 0}
}
func (m *Schema_JSON) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schema_JSON.Unmarshal(m, b)
}
func (m *Schema_JSON) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schema_JSON.Marshal(b, m, deterministic)
}
func (dst *Schema_JSON) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schema_JSON.Merge(dst, src)
}
func (m *Schema_JSON) XXX_Size() int {
	return xxx_messageInfo_Schema_JSON.Size(m)
}
func (m *Schema_JSON) XXX_DiscardUnknown() {
	xxx_messageInfo_Schema_JSON.DiscardUnknown(m)
}

var xxx_messageInfo_Schema_JSON proto.InternalMessageInfo

func (m *Schema_JSON) GetType() []Schema_JSON_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Schema_JSON) GetEnum() *JSON_Array {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *Schema_JSON) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *Schema_JSON) GetMinLength() uint64 {
	if m != nil {
		return m.MinLength
	}
	return 0
}

func (m *Schema_JSON) GetMaxLength() uint64 {
	if m != nil {
		return m.MaxLength
	}
	return 0
}

func (m *Schema_JSON) GetHasMaxLength() bool {
	if m != nil {
		return m.HasMaxLength
	}
	return false
}

func (m *Schema_JSON) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *Schema_JSON) GetMinimum() float64 {
	if m != nil {
		return m.Minimum
	}
	return 0
}

func (m *Schema_JSON) GetMaximum() float64 {
	if m != nil {
		return m.Maximum
	}
	return 0
}

func (m *Schema_JSON) GetHasMinimum() bool {
	if m != nil {
		return m.HasMinimum
	}
	return false
}

func (m *Schema_JSON) GetHasMaximum() bool {
	if m != nil {
		return m.HasMaximum
	}
	return false
}

func (m *Schema_JSON) GetTranslatedMultipleOf() float64 {
	if m != nil {
		return m.TranslatedMultipleOf
	}
	return 0
}

func (m *Schema_JSON) GetExclusiveMinimum() bool {
	if m != nil {
		return m.ExclusiveMinimum
	}
	return false
}

func (m *Schema_JSON) GetExclusiveMaximum() bool {
	if m != nil {
		return m.ExclusiveMaximum
	}
	return false
}

func (m *Schema_JSON) GetItems() []*SchemaPtr {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Schema_JSON) GetUniqueItems() bool {
	if m != nil {
		return m.UniqueItems
	}
	return false
}

func (m *Schema_JSON) GetMinItems() uint64 {
	if m != nil {
		return m.MinItems
	}
	return 0
}

func (m *Schema_JSON) GetMaxItems() uint64 {
	if m != nil {
		return m.MaxItems
	}
	return 0
}

func (m *Schema_JSON) GetHasMaxItems() bool {
	if m != nil {
		return m.HasMaxItems
	}
	return false
}

func (m *Schema_JSON) GetProperties() map[string]*SchemaPtr {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *Schema_JSON) GetRequired() []string {
	if m != nil {
		return m.Required
	}
	return nil
}

func (m *Schema_JSON) GetMinProperties() uint64 {
	if m != nil {
		return m.MinProperties
	}
	return 0
}

func (m *Schema_JSON) GetMaxProperties() uint64 {
	if m != nil {
		return m.MaxProperties
	}
	return 0
}

func (m *Schema_JSON) GetHasMaxProperties() bool {
	if m != nil {
		return m.HasMaxProperties
	}
	return false
}

func (m *Schema_JSON) GetAdditionalProperties() *Schema_JSON_AdditionalProperties {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

func (m *Schema_JSON) GetHasAdditionalProperties() bool {
	if m != nil {
		return m.HasAdditionalProperties
	}
	return false
}

func (m *Schema_JSON) GetAllOf() []*SchemaPtr {
	if m != nil {
		return m.AllOf
	}
	return nil
}

func (m *Schema_JSON) GetAnyOf() []*SchemaPtr {
	if m != nil {
		return m.AnyOf
	}
	return nil
}

func (m *Schema_JSON) GetOneOf() []*SchemaPtr {
	if m != nil {
		return m.OneOf
	}
	return nil
}

func (m *Schema_JSON) GetNot() *SchemaPtr {
	if m != nil {
		return m.Not
	}
	return nil
}

// /FIXME true is equivalent to {}, false is equivalent to {"not": {}}
type Schema_JSON_AdditionalProperties struct {
	// Types that are valid to be assigned to AddProps:
	//	*Schema_JSON_AdditionalProperties_AlwaysSucceed
	//	*Schema_JSON_AdditionalProperties_Ref
	AddProps             isSchema_JSON_AdditionalProperties_AddProps `protobuf_oneof:"add_props"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *Schema_JSON_AdditionalProperties) Reset()         { *m = Schema_JSON_AdditionalProperties{} }
func (m *Schema_JSON_AdditionalProperties) String() string { return proto.CompactTextString(m) }
func (*Schema_JSON_AdditionalProperties) ProtoMessage()    {}
func (*Schema_JSON_AdditionalProperties) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_373f9fab1673e6f4, []int{11, 0, 1}
}
func (m *Schema_JSON_AdditionalProperties) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schema_JSON_AdditionalProperties.Unmarshal(m, b)
}
func (m *Schema_JSON_AdditionalProperties) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schema_JSON_AdditionalProperties.Marshal(b, m, deterministic)
}
func (dst *Schema_JSON_AdditionalProperties) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schema_JSON_AdditionalProperties.Merge(dst, src)
}
func (m *Schema_JSON_AdditionalProperties) XXX_Size() int {
	return xxx_messageInfo_Schema_JSON_AdditionalProperties.Size(m)
}
func (m *Schema_JSON_AdditionalProperties) XXX_DiscardUnknown() {
	xxx_messageInfo_Schema_JSON_AdditionalProperties.DiscardUnknown(m)
}

var xxx_messageInfo_Schema_JSON_AdditionalProperties proto.InternalMessageInfo

type isSchema_JSON_AdditionalProperties_AddProps interface {
	isSchema_JSON_AdditionalProperties_AddProps()
}

type Schema_JSON_AdditionalProperties_AlwaysSucceed struct {
	AlwaysSucceed bool `protobuf:"varint,1,opt,name=always_succeed,json=alwaysSucceed,proto3,oneof"`
}
type Schema_JSON_AdditionalProperties_Ref struct {
	Ref *SchemaPtr `protobuf:"bytes,2,opt,name=ref,proto3,oneof"`
}

func (*Schema_JSON_AdditionalProperties_AlwaysSucceed) isSchema_JSON_AdditionalProperties_AddProps() {}
func (*Schema_JSON_AdditionalProperties_Ref) isSchema_JSON_AdditionalProperties_AddProps()           {}

func (m *Schema_JSON_AdditionalProperties) GetAddProps() isSchema_JSON_AdditionalProperties_AddProps {
	if m != nil {
		return m.AddProps
	}
	return nil
}

func (m *Schema_JSON_AdditionalProperties) GetAlwaysSucceed() bool {
	if x, ok := m.GetAddProps().(*Schema_JSON_AdditionalProperties_AlwaysSucceed); ok {
		return x.AlwaysSucceed
	}
	return false
}

func (m *Schema_JSON_AdditionalProperties) GetRef() *SchemaPtr {
	if x, ok := m.GetAddProps().(*Schema_JSON_AdditionalProperties_Ref); ok {
		return x.Ref
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Schema_JSON_AdditionalProperties) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Schema_JSON_AdditionalProperties_OneofMarshaler, _Schema_JSON_AdditionalProperties_OneofUnmarshaler, _Schema_JSON_AdditionalProperties_OneofSizer, []interface{}{
		(*Schema_JSON_AdditionalProperties_AlwaysSucceed)(nil),
		(*Schema_JSON_AdditionalProperties_Ref)(nil),
	}
}

func _Schema_JSON_AdditionalProperties_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Schema_JSON_AdditionalProperties)
	// add_props
	switch x := m.AddProps.(type) {
	case *Schema_JSON_AdditionalProperties_AlwaysSucceed:
		t := uint64(0)
		if x.AlwaysSucceed {
			t = 1
		}
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Schema_JSON_AdditionalProperties_Ref:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ref); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Schema_JSON_AdditionalProperties.AddProps has unexpected type %T", x)
	}
	return nil
}

func _Schema_JSON_AdditionalProperties_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Schema_JSON_AdditionalProperties)
	switch tag {
	case 1: // add_props.always_succeed
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.AddProps = &Schema_JSON_AdditionalProperties_AlwaysSucceed{x != 0}
		return true, err
	case 2: // add_props.ref
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SchemaPtr)
		err := b.DecodeMessage(msg)
		m.AddProps = &Schema_JSON_AdditionalProperties_Ref{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Schema_JSON_AdditionalProperties_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Schema_JSON_AdditionalProperties)
	// add_props
	switch x := m.AddProps.(type) {
	case *Schema_JSON_AdditionalProperties_AlwaysSucceed:
		n += 1 // tag and wire
		n += 1
	case *Schema_JSON_AdditionalProperties_Ref:
		s := proto.Size(x.Ref)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*UserCfg)(nil), "main.UserCfg")
	proto.RegisterType((*UserCfg_Runtime)(nil), "main.UserCfg.Runtime")
	proto.RegisterType((*UserCfg_Exec)(nil), "main.UserCfg.Exec")
	proto.RegisterType((*FuzzCfg)(nil), "main.FuzzCfg")
	proto.RegisterType((*SpecIR)(nil), "main.SpecIR")
	proto.RegisterType((*Schemas)(nil), "main.Schemas")
	proto.RegisterMapType((map[uint32]*RefOrSchemaJSON)(nil), "main.Schemas.JsonEntry")
	proto.RegisterType((*RefOrSchemaJSON)(nil), "main.RefOrSchemaJSON")
	proto.RegisterType((*SchemaPtr)(nil), "main.SchemaPtr")
	proto.RegisterType((*Endpoint)(nil), "main.Endpoint")
	proto.RegisterType((*EndpointJSON)(nil), "main.EndpointJSON")
	proto.RegisterMapType((map[uint32]*SchemaPtr)(nil), "main.EndpointJSON.OutputsEntry")
	proto.RegisterType((*ParamsJSON)(nil), "main.ParamsJSON")
	proto.RegisterMapType((map[string]*ParamJSON)(nil), "main.ParamsJSON.HeaderEntry")
	proto.RegisterMapType((map[string]*ParamJSON)(nil), "main.ParamsJSON.PathEntry")
	proto.RegisterMapType((map[string]*ParamJSON)(nil), "main.ParamsJSON.QueryEntry")
	proto.RegisterType((*ParamJSON)(nil), "main.ParamJSON")
	proto.RegisterType((*PathPartial)(nil), "main.PathPartial")
	proto.RegisterType((*Schema)(nil), "main.Schema")
	proto.RegisterType((*Schema_JSON)(nil), "main.Schema.JSON")
	proto.RegisterMapType((map[string]*SchemaPtr)(nil), "main.Schema.JSON.PropertiesEntry")
	proto.RegisterType((*Schema_JSON_AdditionalProperties)(nil), "main.Schema.JSON.AdditionalProperties")
	proto.RegisterEnum("main.Method", Method_name, Method_value)
	proto.RegisterEnum("main.UserCfg_Kind", UserCfg_Kind_name, UserCfg_Kind_value)
	proto.RegisterEnum("main.Schema_JSON_Type", Schema_JSON_Type_name, Schema_JSON_Type_value)
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor_messages_373f9fab1673e6f4) }

var fileDescriptor_messages_373f9fab1673e6f4 = []byte{
	// 1521 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xdd, 0x8e, 0xdb, 0xc6,
	0x15, 0xb6, 0x56, 0x14, 0x25, 0x1e, 0xad, 0xb4, 0xf4, 0x74, 0x6d, 0x33, 0x72, 0xd2, 0xac, 0x15,
	0x3b, 0x11, 0xe2, 0x40, 0x45, 0x95, 0xa0, 0x68, 0x03, 0x14, 0xe8, 0x7a, 0xad, 0x54, 0x6b, 0xc7,
	0x92, 0xc2, 0x95, 0x51, 0x14, 0xbd, 0x10, 0x66, 0xa5, 0xd1, 0x8a, 0x31, 0x39, 0xe4, 0x0e, 0x87,
	0x1b, 0x29, 0x0f, 0xd0, 0xc7, 0xe8, 0x0b, 0xf4, 0xa6, 0x6f, 0xd4, 0xfb, 0x3e, 0x45, 0x31, 0x67,
	0x86, 0x12, 0xb5, 0xda, 0x2d, 0x0a, 0xe4, 0x6e, 0xce, 0xf9, 0xbe, 0xf3, 0x3b, 0x67, 0x86, 0x43,
	0x68, 0x46, 0x2c, 0x4d, 0xe9, 0x15, 0x4b, 0xbb, 0x89, 0x88, 0x65, 0x4c, 0xac, 0x88, 0x06, 0xbc,
	0x75, 0x34, 0xa7, 0x92, 0x4e, 0x7f, 0x4c, 0x63, 0xae, 0xd5, 0xed, 0x7f, 0x95, 0xc1, 0xfe, 0x6b,
	0x14, 0x9e, 0x2d, 0xae, 0x88, 0x07, 0xd5, 0x1b, 0x26, 0xd2, 0x20, 0xe6, 0x5e, 0xe9, 0xa4, 0xd4,
	0x69, 0xf8, 0xb9, 0x48, 0x3e, 0x01, 0xa0, 0x99, 0x5c, 0x4e, 0x65, 0xfc, 0x81, 0x71, 0xef, 0xe0,
	0xa4, 0xd4, 0x71, 0x7c, 0x47, 0x69, 0x26, 0x4a, 0x41, 0x5e, 0x80, 0xf5, 0x21, 0xe0, 0x73, 0xaf,
	0x7c, 0x52, 0xea, 0x34, 0x7b, 0x0f, 0xbb, 0x2a, 0x52, 0x57, 0x3b, 0xed, 0xbe, 0x0d, 0xf8, 0xdc,
	0x47, 0x98, 0x10, 0xb0, 0x16, 0x41, 0xc8, 0x3c, 0x0b, 0xed, 0x71, 0x4d, 0xba, 0x50, 0x15, 0x19,
	0x97, 0x41, 0xc4, 0xbc, 0xca, 0x49, 0xa9, 0x53, 0xef, 0x1d, 0xef, 0x58, 0xfb, 0x1a, 0xf3, 0x73,
	0x92, 0x0a, 0xc5, 0x56, 0x6c, 0xe6, 0xd9, 0x48, 0xde, 0x0d, 0xd5, 0x5f, 0xb1, 0x99, 0x8f, 0x70,
	0x2b, 0x86, 0xaa, 0x31, 0x55, 0x51, 0x97, 0x71, 0x2a, 0xb1, 0x24, 0xc7, 0xc7, 0xb5, 0xd2, 0x25,
	0xb1, 0x90, 0xa6, 0x12, 0x5c, 0xab, 0x1a, 0x17, 0x01, 0xa7, 0xe1, 0x14, 0xd9, 0x65, 0x5d, 0x23,
	0x6a, 0x06, 0xca, 0x64, 0x03, 0xa3, 0xa1, 0x55, 0x80, 0xc7, 0xb1, 0x90, 0xad, 0xef, 0xc0, 0x52,
	0xe1, 0xc9, 0x31, 0x54, 0x52, 0x49, 0x85, 0x0a, 0x57, 0xee, 0x38, 0xbe, 0x16, 0x94, 0x56, 0xb0,
	0x94, 0xa9, 0x80, 0xa8, 0x45, 0x41, 0x65, 0x91, 0xca, 0x38, 0xf1, 0xca, 0xa8, 0xc4, 0x75, 0xbb,
	0x0d, 0x96, 0xea, 0x18, 0xa9, 0x43, 0xf5, 0xfd, 0xf0, 0xed, 0x70, 0xf4, 0x97, 0xa1, 0xfb, 0x80,
	0x34, 0xc0, 0x19, 0x25, 0x8c, 0x9f, 0x8e, 0xcf, 0x6f, 0xbe, 0x76, 0x4b, 0xed, 0x1f, 0xa0, 0xfa,
	0x5d, 0xf6, 0xf3, 0xcf, 0x6a, 0xcb, 0x9e, 0x83, 0x3d, 0x8b, 0xf9, 0x22, 0xb8, 0xc2, 0xf2, 0xea,
	0xbd, 0xc3, 0x62, 0x43, 0x7c, 0x83, 0x91, 0x13, 0xb0, 0xd2, 0x84, 0xcd, 0xb0, 0xdc, 0x0d, 0xe7,
	0x22, 0x61, 0xb3, 0x73, 0xdf, 0x47, 0xa4, 0x3d, 0x05, 0x5b, 0xcb, 0xe4, 0x0b, 0xa8, 0xa6, 0xb3,
	0x25, 0x8b, 0x68, 0x6a, 0x5c, 0x36, 0x0c, 0x5d, 0x2b, 0xfd, 0x1c, 0x25, 0x5f, 0x81, 0xc3, 0xf8,
	0x3c, 0x89, 0x03, 0x2e, 0x53, 0xac, 0xab, 0xde, 0x6b, 0x6a, 0x6a, 0xdf, 0xa8, 0xfd, 0x2d, 0xa1,
	0xfd, 0xf7, 0x12, 0x54, 0x8d, 0x0b, 0xf2, 0x12, 0x2c, 0x35, 0x80, 0xd8, 0xa2, 0x7a, 0xef, 0xc9,
	0x8e, 0xff, 0xee, 0x9b, 0x34, 0xe6, 0x7d, 0x2e, 0xc5, 0xda, 0x47, 0x52, 0x6b, 0x08, 0xce, 0x46,
	0x45, 0x5c, 0x28, 0x7f, 0x60, 0x6b, 0x33, 0x9d, 0x6a, 0x49, 0x5e, 0x42, 0xe5, 0x86, 0x86, 0x19,
	0x33, 0xb5, 0x3d, 0xd2, 0xce, 0x7c, 0xb6, 0x18, 0x09, 0xed, 0xf1, 0xcd, 0xc5, 0x68, 0xe8, 0x6b,
	0xce, 0xb7, 0x07, 0xbf, 0x2f, 0xb5, 0x25, 0x1c, 0xdd, 0x42, 0xc9, 0x67, 0x50, 0x4e, 0xa4, 0x30,
	0xe5, 0x1e, 0x15, 0xd3, 0x19, 0x4b, 0x31, 0x78, 0xe0, 0x2b, 0x94, 0xbc, 0x04, 0x5b, 0x57, 0x6e,
	0x22, 0x3d, 0x2c, 0xf2, 0xba, 0xca, 0xcf, 0xe0, 0x81, 0x6f, 0x28, 0xaf, 0x8e, 0xa0, 0x91, 0x48,
	0x31, 0x8d, 0xc5, 0x54, 0x2b, 0xda, 0xbf, 0x01, 0x67, 0xe3, 0x51, 0x55, 0xf1, 0xfe, 0xfc, 0x75,
	0x5e, 0xc5, 0xfb, 0xf3, 0xd7, 0x4a, 0x23, 0xd8, 0xc2, 0x8c, 0xa3, 0x5a, 0xb6, 0xff, 0x04, 0xb5,
	0xbc, 0x8d, 0xa4, 0xb3, 0xe9, 0x97, 0x0a, 0x4c, 0x76, 0x9b, 0x6c, 0x22, 0x23, 0xe3, 0x15, 0x40,
	0x2d, 0x6f, 0x79, 0xfb, 0x1f, 0x07, 0x70, 0x58, 0x24, 0xa9, 0x59, 0x89, 0x98, 0x5c, 0xc6, 0x73,
	0x74, 0xd4, 0xcc, 0xe7, 0xe0, 0x1d, 0xea, 0x7c, 0x83, 0x91, 0xdf, 0x41, 0x23, 0xa1, 0x72, 0x39,
	0x4d, 0xa8, 0x90, 0x01, 0x0d, 0xf3, 0xad, 0x35, 0xe5, 0x8e, 0xa9, 0x5c, 0x8e, 0x35, 0xe2, 0x1f,
	0x26, 0x5b, 0x21, 0x25, 0x1d, 0xb0, 0x03, 0x9e, 0x64, 0x32, 0xc5, 0xa3, 0x53, 0xef, 0xb9, 0xb9,
	0x81, 0xa0, 0x51, 0x8a, 0x9b, 0x60, 0x70, 0xf2, 0x07, 0xa8, 0xc6, 0x99, 0x44, 0xaa, 0x85, 0xbe,
	0x3f, 0xdd, 0xaf, 0xa8, 0x3b, 0xd2, 0x0c, 0x3d, 0x09, 0x39, 0xbf, 0xf5, 0x16, 0x0e, 0x8b, 0xc0,
	0x1d, 0xf3, 0xf0, 0x62, 0x77, 0x1e, 0x6e, 0xef, 0x66, 0x71, 0x12, 0xfe, 0x59, 0x06, 0xd8, 0xa6,
	0x47, 0x3e, 0x03, 0xeb, 0x32, 0x9e, 0xaf, 0x77, 0xc7, 0x00, 0x71, 0xcc, 0x1e, 0x41, 0xf2, 0x0d,
	0xd8, 0x4b, 0x46, 0xe7, 0x4c, 0x98, 0xb6, 0x7c, 0x7c, 0xbb, 0xca, 0xee, 0x00, 0x61, 0x9d, 0xb7,
	0xe1, 0x92, 0x2e, 0x58, 0xaa, 0x57, 0x78, 0xd0, 0xeb, 0xbd, 0xd6, 0x9e, 0x8d, 0xea, 0xaa, 0x99,
	0x79, 0xc5, 0x23, 0xbf, 0x85, 0xca, 0x75, 0xc6, 0xc4, 0xda, 0xf4, 0xe7, 0xe9, 0x9e, 0xc1, 0x0f,
	0x0a, 0xd5, 0x16, 0x9a, 0xd9, 0x7a, 0x03, 0xf5, 0x42, 0xe4, 0x62, 0x63, 0x9c, 0xff, 0xd5, 0x98,
	0x6d, 0x7d, 0xdb, 0xc6, 0xb4, 0x06, 0xe0, 0x6c, 0x32, 0xfa, 0x65, 0x9e, 0xce, 0x01, 0xb6, 0xa9,
	0xfe, 0x22, 0x57, 0xed, 0x37, 0x2a, 0x29, 0xa3, 0x27, 0x2d, 0xa8, 0x09, 0x76, 0x9d, 0x05, 0x82,
	0xe9, 0x61, 0xae, 0xf9, 0x1b, 0x99, 0x3c, 0xd3, 0xa7, 0xf9, 0x9e, 0xfd, 0x57, 0x58, 0xfb, 0x8f,
	0x50, 0x2f, 0x0c, 0x32, 0x39, 0x56, 0xdb, 0x23, 0xcc, 0x17, 0x42, 0x9d, 0x25, 0x25, 0x11, 0xb2,
	0xf5, 0xe3, 0x98, 0x4b, 0xe0, 0x95, 0x05, 0x07, 0x49, 0xd2, 0xfe, 0x4f, 0x1d, 0x6c, 0xed, 0xb1,
	0xf5, 0xef, 0x3a, 0x58, 0x98, 0xd1, 0x97, 0x60, 0xc9, 0x75, 0xc2, 0xf0, 0x4e, 0x6b, 0xf6, 0x1e,
	0xef, 0x5d, 0x0e, 0xdd, 0xc9, 0x3a, 0x61, 0x3e, 0x72, 0xc8, 0x73, 0xb0, 0x18, 0xcf, 0x22, 0x93,
	0xa2, 0x39, 0x28, 0x48, 0x3a, 0x15, 0x82, 0xae, 0x7d, 0x44, 0xc9, 0x63, 0xb0, 0x17, 0xb1, 0x88,
	0x68, 0xfe, 0x2d, 0x32, 0x92, 0xfa, 0x10, 0x45, 0x01, 0x9f, 0x86, 0x8c, 0x5f, 0xc9, 0x25, 0x7e,
	0x88, 0x2c, 0xdf, 0x89, 0x02, 0xfe, 0x3d, 0x2a, 0x10, 0xa6, 0xab, 0x1c, 0xae, 0x18, 0x98, 0xae,
	0x0c, 0xfc, 0x1c, 0x9a, 0x4b, 0x9a, 0x4e, 0x0b, 0x14, 0x1b, 0xfb, 0x77, 0xb8, 0xa4, 0xe9, 0xbb,
	0x0d, 0xcb, 0x83, 0x6a, 0x42, 0xa5, 0x64, 0x82, 0x7b, 0x55, 0x0c, 0x9e, 0x8b, 0x0a, 0x89, 0x02,
	0x1e, 0x44, 0x59, 0xe4, 0xd5, 0x4e, 0x4a, 0x9d, 0x92, 0x9f, 0x8b, 0x88, 0xd0, 0x15, 0x22, 0x8e,
	0x41, 0xb4, 0x48, 0x3e, 0x85, 0x3a, 0xc6, 0x34, 0x76, 0x80, 0x01, 0x41, 0x05, 0x34, 0xa6, 0x39,
	0xc1, 0x98, 0xd7, 0xb7, 0x04, 0xe3, 0xe1, 0x1b, 0x78, 0x2c, 0x05, 0xe5, 0x69, 0x48, 0x25, 0x9b,
	0x4f, 0xa3, 0x2c, 0x94, 0x41, 0x12, 0xb2, 0x69, 0xbc, 0xf0, 0x0e, 0x31, 0xd4, 0xf1, 0x16, 0x7d,
	0x67, 0xc0, 0xd1, 0x82, 0xbc, 0x84, 0x87, 0x6c, 0x35, 0x0b, 0xb3, 0x34, 0xb8, 0x61, 0x9b, 0xe8,
	0x0d, 0x74, 0xee, 0x6e, 0x80, 0x3c, 0x87, 0x5d, 0xb2, 0xc9, 0xa4, 0x79, 0x9b, 0x6c, 0xf2, 0x79,
	0x01, 0x95, 0x40, 0xb2, 0x28, 0xf5, 0x8e, 0xf0, 0x80, 0xee, 0xdf, 0x32, 0x88, 0x92, 0x67, 0x70,
	0x98, 0xf1, 0xe0, 0x3a, 0x63, 0x53, 0xcd, 0x76, 0xd1, 0x5d, 0x5d, 0xeb, 0xce, 0x91, 0xf2, 0x14,
	0xd4, 0xde, 0x19, 0xfc, 0x21, 0xee, 0x56, 0x2d, 0x0a, 0xf8, 0x16, 0xa4, 0x2b, 0x03, 0x12, 0x03,
	0xd2, 0x95, 0x06, 0xdb, 0xd0, 0xc8, 0x77, 0x52, 0x13, 0x7e, 0xa5, 0xbd, 0xeb, 0xb6, 0x69, 0xce,
	0x29, 0x40, 0x22, 0xe2, 0x84, 0x09, 0x19, 0xb0, 0xd4, 0x3b, 0xc6, 0x64, 0x9f, 0xed, 0xcf, 0xe6,
	0x78, 0xc3, 0xd1, 0x77, 0x4a, 0xc1, 0x68, 0xe7, 0xa8, 0x3d, 0xc2, 0x87, 0xca, 0xf6, 0xa8, 0xbd,
	0x80, 0xa6, 0x4a, 0xbe, 0x10, 0xe2, 0x31, 0x26, 0xd9, 0x88, 0x02, 0xbe, 0xf5, 0x89, 0x34, 0xba,
	0x2a, 0xd2, 0x9e, 0x18, 0x1a, 0x5d, 0x15, 0x68, 0x5f, 0x01, 0xc9, 0x0b, 0x2a, 0x50, 0x3d, 0xbd,
	0x05, 0xba, 0xaa, 0x02, 0xfb, 0x6f, 0xf0, 0x88, 0xce, 0xe7, 0x81, 0x0c, 0x62, 0x7c, 0x94, 0x6d,
	0x0d, 0x3e, 0xc2, 0x53, 0xf5, 0xf9, 0x7e, 0x95, 0xa7, 0x1b, 0xfa, 0xd6, 0x8d, 0x7f, 0x4c, 0xef,
	0xd0, 0x92, 0x6f, 0xe1, 0x23, 0x95, 0xca, 0xdd, 0x01, 0x5a, 0x98, 0xd1, 0x93, 0x25, 0x4d, 0xef,
	0xf2, 0x48, 0x3e, 0x07, 0x9b, 0x86, 0xa1, 0x9a, 0xcd, 0xa7, 0xf7, 0x0c, 0x07, 0x0d, 0xc3, 0xd1,
	0x02, 0x79, 0x7c, 0xad, 0x78, 0x1f, 0xdf, 0xc7, 0xe3, 0x6b, 0xcd, 0x8b, 0x39, 0xce, 0xfa, 0x27,
	0xf7, 0xf0, 0x62, 0xae, 0xa6, 0xfd, 0x19, 0x94, 0x79, 0x2c, 0xbd, 0x5f, 0xdf, 0x73, 0xef, 0xf1,
	0x58, 0xb6, 0x86, 0x70, 0x74, 0x6b, 0xab, 0xff, 0xef, 0x3b, 0xf9, 0xae, 0x2f, 0x68, 0xeb, 0x1a,
	0x8e, 0xef, 0x6c, 0xc1, 0x17, 0xd0, 0xa4, 0xe1, 0x4f, 0x74, 0x9d, 0x4e, 0xd3, 0x6c, 0x36, 0x63,
	0xf9, 0x25, 0x3d, 0x78, 0xe0, 0x37, 0xb4, 0xfe, 0x42, 0xab, 0xd5, 0xcb, 0x2b, 0x7f, 0xf7, 0xdc,
	0xfd, 0xf2, 0x12, 0x6c, 0xf1, 0xaa, 0x0e, 0x0e, 0x9d, 0xcf, 0x71, 0x07, 0xd2, 0x76, 0x0c, 0x96,
	0xba, 0x49, 0x77, 0xdf, 0xc7, 0x55, 0x28, 0x53, 0xbe, 0x76, 0x4b, 0xa4, 0x06, 0x16, 0xcf, 0xc2,
	0xd0, 0x3d, 0x50, 0xf8, 0x65, 0x1c, 0x87, 0x8c, 0x72, 0xb7, 0xac, 0x84, 0x80, 0x4b, 0x76, 0xc5,
	0x84, 0x6b, 0x11, 0x00, 0x9b, 0x67, 0xd1, 0x25, 0x13, 0x6e, 0x85, 0x38, 0x50, 0xa1, 0xea, 0xca,
	0x75, 0x6d, 0xa5, 0x4e, 0xa5, 0x08, 0xf8, 0x95, 0x5b, 0x55, 0xeb, 0xf8, 0xf2, 0x47, 0x36, 0x93,
	0x6e, 0xed, 0xcb, 0x9f, 0xc0, 0xd6, 0x2f, 0xa4, 0xbd, 0x90, 0x7f, 0xee, 0x4f, 0x74, 0xc8, 0x41,
	0xff, 0xf4, 0xb5, 0x7b, 0xa0, 0x56, 0xe3, 0xd1, 0xc5, 0xc4, 0x2d, 0x2b, 0x70, 0xfc, 0x7e, 0xe2,
	0x5a, 0xca, 0xff, 0xf8, 0x74, 0x72, 0x36, 0x70, 0x2b, 0xca, 0xe7, 0xeb, 0xfe, 0xf7, 0xfd, 0x49,
	0xdf, 0xb5, 0x95, 0xa7, 0xb3, 0xd1, 0x70, 0xd8, 0x3f, 0x9b, 0xb8, 0x55, 0x25, 0x8c, 0xc6, 0x93,
	0xf3, 0xd1, 0xf0, 0xc2, 0xad, 0x29, 0x83, 0x89, 0x7f, 0x7a, 0xd6, 0x77, 0x9d, 0x4b, 0x1b, 0xff,
	0xcf, 0xbe, 0xfe, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc9, 0xcf, 0xeb, 0x91, 0xc8, 0x0d, 0x00,
	0x00,
}
