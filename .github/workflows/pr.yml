name: pr

on:
  pull_request: {}

jobs:
  tagfile:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # For $ git tag

    - name: Ensure Tagfile is usable
      run: grep -E '^[0-9]+[.][0-9]+[.][0-9]+$' Tagfile

    - name: Checkout master Tagfile
      uses: actions/checkout@v2
      with:
        ref: master
        path: ./master-Tagfile

    - name: Ensure Tagfile has changes
      run: '! diff -q Tagfile ./master-Tagfile/Tagfile'

    - name: Ensure tag wasn't published already
      run: git tag | grep -vF $(cat Tagfile)

  ci-check--lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: docker/bake-action@v1.2.0
      with:
        files: ./docker-bake.hcl
        targets: ${{ env.TARGET }}
        set: |
          *.cache-to=type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/monkey:${{ env.TARGET }},mode=max
      env:
        TARGET: ci-check--lint

  ci-check--mod:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: docker/bake-action@v1.2.0
      with:
        files: ./docker-bake.hcl
        targets: ${{ env.TARGET }}
        set: |
          *.cache-to=type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/monkey:${{ env.TARGET }},mode=max
      env:
        TARGET: ci-check--mod

  ci-check--test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: docker/bake-action@v1.2.0
      with:
        files: ./docker-bake.hcl
        targets: ${{ env.TARGET }}
        set: |
          *.cache-to=type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/monkey:${{ env.TARGET }},mode=max
      env:
        TARGET: ci-check--test

  goreleaser-dist-:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: docker/bake-action@v1.2.0
      with:
        files: ./docker-bake.hcl
        targets: ${{ env.TARGET }}
        set: |
          *.cache-to=type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/monkey:${{ env.TARGET }},mode=max
      env:
        TARGET: goreleaser-dist

    - name: Test CLI
      run: |
        ext=tar.gz ; exe=monkey ; arch=$(uname -m)
        if [[ "$arch" = Windows ]]; then
          ext=zip ; exe=monkey.exe
        fi
        tar zxvf ./dist/monkey-$(uname -s)-$arch.$ext -C .
        ./$exe -h | grep monkey
        ./$exe help | grep monkey
        ./$exe version
        ./$exe fmt
        [[ $(./$exe version | wc -l) = 1 ]]
        ./$exe version | grep -F $(cat Tagfile)
        ./$exe --version | grep -F $(cat Tagfile)
